(()=>{"use strict";class t{constructor(){this._allPosts=[],this._container=void 0,this._content=void 0,this._element=void 0,this._form=void 0,this._posts=void 0,this.onSubmitForm=this.onSubmitForm.bind(this)}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this._container=t}checkBinding(){if(void 0===this._container)throw new Error("Timeline not bind to DOM")}drawUI(){this.checkBinding(),this._container.innerHTML=t.markup,this._element=this._container.querySelector(t.selector),this._content=this._element.querySelector(t.selectorContent),this._form=this._element.querySelector(t.selectorForm),this._posts=this._content.querySelector(t.selectorPosts),this._form.addEventListener("submit",this.onSubmitForm),this.redrawDOM()}getGeolocation(t,e){navigator.geolocation?navigator.geolocation.getCurrentPosition(t,e,{enableHighAccuracy:!0}):e({code:999,message:"User browser does not support Geolocation"})}onSubmitForm(e){console.log("onSubmitForm",e),e.preventDefault();const s=this._form.querySelector(t.selectorFormInput);this.getGeolocation((t=>{const{latitude:e,longitude:i}=t.coords;console.log("lat "+e),console.log("long "+i),this._allPosts.push({text:s.value,coords:t.coords,time:Date.now()}),s.value="",this.redrawDOM()}),(t=>{console.log(t)}))}redrawDOM(){this._posts.innerHTML="",this._allPosts.length?(this._posts.style.height="",this._posts.classList.remove("timeline__posts--empty"),this._allPosts.forEach((e=>{this._posts.insertAdjacentHTML("afterbegin",t.markupPost(e))})),this._posts.style.height=this._posts.offsetHeight>this._content.offsetHeight?this._posts.offsetHeight+"px":this._content.offsetHeight+"px"):(this._posts.classList.add("timeline__posts--empty"),this._posts.style.height=this._content.offsetHeight+"px")}static get markup(){return'\n      <div class="timeline">\n        <div class="timeline__content">\n          <div class="timeline__posts timeline__posts--empty"></div>\n        </div>\n        <form class="timeline__form timeline-form">\n          <input class="timeline-form__input">\n          \x3c!--<button class="timeline-form__btn-submit" type="submit">\n            <svg viewBox="0 0 320 512" xmlns="http://www.w3.org/2000/svg">\n              <path d="M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z" />\n            </svg>\n          </button>--\x3e\n        </form>\n      </div>\n    '}static markupPost(t){const e=new Date(t.time),s=e.getFullYear(),i=String(e.getMonth()+1).padStart(2,"0"),o=String(e.getDate()).padStart(2,"0"),n=String(e.getHours()).padStart(2,"0"),r=String(e.getMinutes()).padStart(2,"0"),l=`${s}-${i}-${o}T${n}:${r}:${String(e.getSeconds()).padStart(2,"0")}`,c=`${o}.${i}.${s} ${n}:${r}`;return`\n      <div class="timeline__post timeline-post">\n        <div class="timeline-post__description">\n          <p class="timeline-post__text">${t.text}</p>\n          <span class="timeline-post__coordinates">\n            [${t.coords.latitude}, ${t.coords.longitude}]\n          </span>\n        </div>\n        <time class="timeline-post__datetime" datetime="${l}">${c}</time>\n      </div>\n    `}static get selector(){return".timeline"}static get selectorContent(){return".timeline__content"}static get selectorForm(){return".timeline-form"}static get selectorFormInput(){return".timeline-form__input"}static get selectorPosts(){return".timeline__posts"}}document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector("#app"),s=new t;s.bindToDOM(e),s.drawUI()}))})();